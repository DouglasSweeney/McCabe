<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="McCabe project"><sessioninfo id="dks-ThinkCentre-M73-7876cdee" start="1588427362897" dump="1588427365807"/><package name="main/java/main"><class name="main/java/main/TokenList"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lmain/java/scanner/Token;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Lmain/java/scanner/Token;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getList" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentIndex" desc="()Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="10" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCurrentIndex" desc="(Ljava/lang/Integer;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="105" covered="86"/><counter type="BRANCH" missed="13" covered="7"/><counter type="COMPLEXITY" missed="10" covered="11"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="main/java/main/Utils"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProcedureTokens" desc="(Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="166"/><counter type="BRANCH" missed="5" covered="19"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="169"/><counter type="BRANCH" missed="5" covered="19"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="main/java/main/Main"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createScanner" desc="(Ljava/lang/String;)Lmain/java/scanner/Scanner;"><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildTokenList" desc="(Lmain/java/scanner/Scanner;)V"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokensFromFile" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processTokens" desc="(Ljava/lang/String;Lmain/java/main/Options;)V"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runOneFile" desc="(Lmain/java/main/Options;)V"><counter type="INSTRUCTION" missed="6" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runDirectory" desc="(ZLmain/java/main/Options;)V"><counter type="INSTRUCTION" missed="14" covered="77"/><counter type="BRANCH" missed="4" covered="6"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="(ZLmain/java/main/Options;)V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$runDirectory$1" desc="(Ljava/nio/file/Path;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$runDirectory$0" desc="(Ljava/nio/file/Path;)Z"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="210"/><counter type="BRANCH" missed="10" covered="12"/><counter type="COMPLEXITY" missed="9" covered="14"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="main/java/main/Metrics"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="50" covered="53"/><counter type="BRANCH" missed="15" covered="5"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compute" desc="(Ljava/lang/String;Ljava/util/List;Lmain/java/main/Options;)V"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearSlocList" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfTests" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfPackages" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfSlocs" desc="(Ljava/lang/String;)I"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="debugging_print" desc="()V"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="()V"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="59" covered="133"/><counter type="BRANCH" missed="17" covered="7"/><counter type="COMPLEXITY" missed="14" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="main/java/main/Options"><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="134"/><counter type="BRANCH" missed="3" covered="12"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="usage" desc="()V"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUseExceptions" desc="()Z"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMcCabeDirectory" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMcCabeDirectory" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isComputeOnlyOneMethod" desc="()Z"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setComputeOnlyOneMethod" desc="(Z)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethodName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMethodName" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="60" covered="190"/><counter type="BRANCH" missed="3" covered="12"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="274" covered="788"/><counter type="BRANCH" missed="48" covered="57"/><counter type="COMPLEXITY" missed="42" covered="57"/><counter type="METHOD" missed="6" covered="39"/><counter type="CLASS" missed="0" covered="5"/></package><package name="main/java/scanner"><class name="main/java/scanner/Scanner"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="10" covered="348"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextToken" desc="()Lmain/java/scanner/Token;"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextValidToken" desc="()Lmain/java/scanner/Token;"><counter type="INSTRUCTION" missed="63" covered="961"/><counter type="BRANCH" missed="18" covered="134"/><counter type="COMPLEXITY" missed="14" covered="77"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decimalLiteral" desc="(CLjava/lang/StringBuffer;)Lmain/java/scanner/Token;"><counter type="INSTRUCTION" missed="86" covered="267"/><counter type="BRANCH" missed="26" covered="56"/><counter type="COMPLEXITY" missed="21" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escape" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="23" covered="27"/><counter type="BRANCH" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextCh" desc="()V"><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportScannerError" desc="(Ljava/lang/String;[Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isHexDigit" desc="(C)Z"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOctalDigit" desc="(C)Z"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBinaryDigit" desc="(C)Z"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDigit" desc="(C)Z"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWhitespace" desc="(C)Z"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIdentifier" desc="(C)Z"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIdentifierPartial" desc="(C)Z"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorHasOccurred" desc="()Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fileName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="263" covered="1718"/><counter type="BRANCH" missed="54" covered="229"/><counter type="COMPLEXITY" missed="47" covered="130"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="main/java/scanner/Token"><method name="&lt;init&gt;" desc="(Lmain/java/scanner/TokenEnum;I)V"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lmain/java/scanner/TokenEnum;Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="main/java/scanner/CharReader"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextChar" desc="()C"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lineNumber" desc="()I"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fileName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="26"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="main/java/scanner/TokenEnum"><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="1064"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="1064"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="270" covered="2831"/><counter type="BRANCH" missed="54" covered="229"/><counter type="COMPLEXITY" missed="49" covered="136"/><counter type="METHOD" missed="6" covered="20"/><counter type="CLASS" missed="0" covered="4"/></package><package name="main/java/debug"><class name="main/java/debug/Debug"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setProperties" desc="()V"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printList" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printList" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareToFirstCall" desc="(Lmain/java/main/Options;)V"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEnabled" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="println" desc="(Lmain/java/debug/Categories;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="println" desc="(Lmain/java/debug/Categories;Lmain/java/main/Options;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="3" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="println" desc="(Lmain/java/debug/Categories;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="3" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="println" desc="(Lmain/java/debug/Categories;Ljava/util/List;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="3" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="188"/><counter type="BRANCH" missed="10" covered="24"/><counter type="COMPLEXITY" missed="10" covered="18"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="main/java/debug/Categories"><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="10" covered="252"/><counter type="BRANCH" missed="10" covered="24"/><counter type="COMPLEXITY" missed="10" covered="19"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="2"/></package><package name="main/java/metrics"><class name="main/java/metrics/CountFiles"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="9" covered="9"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compute" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfFiles" desc="()I"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="debugging_print" desc="()V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="()V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processTokens" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$main$1" desc="(Ljava/nio/file/Path;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$main$0" desc="(Ljava/nio/file/Path;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="92" covered="43"/><counter type="BRANCH" missed="10" covered="2"/><counter type="COMPLEXITY" missed="10" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="main/java/metrics/Packages"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="9" covered="5"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compute" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="118"/><counter type="BRANCH" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="debugging_print" desc="()V"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="()V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$main$1" desc="(Ljava/nio/file/Path;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$main$0" desc="(Ljava/nio/file/Path;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="111" covered="165"/><counter type="BRANCH" missed="8" covered="20"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="main/java/metrics/Mccabe"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="19" covered="20"/><counter type="BRANCH" missed="6" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countBraces" desc="(Ljava/lang/String;Lmain/java/scanner/Token;Ljava/lang/Integer;Ljava/util/List;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returns" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="158"/><counter type="BRANCH" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selections" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="incrementComplexityFactor" desc="(Ljava/lang/Integer;)V"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loops" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="133"/><counter type="BRANCH" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="operators" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="133"/><counter type="BRANCH" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exceptions" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMcCabeComplexityFactor" desc="(Ljava/lang/String;Ljava/util/List;Z)V"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMethodsAndComplexityFactor" desc="(Ljava/lang/String;Ljava/util/List;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Z)V"><counter type="INSTRUCTION" missed="0" covered="187"/><counter type="BRANCH" missed="4" covered="34"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTotalComplexity" desc="(Ljava/lang/String;)D"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compute" desc="(Ljava/lang/String;Ljava/util/List;Lmain/java/main/Options;)V"><counter type="INSTRUCTION" missed="0" covered="121"/><counter type="BRANCH" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="debugging_print" desc="()V"><counter type="INSTRUCTION" missed="9" covered="82"/><counter type="BRANCH" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="()V"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOverallComplexityFactor" desc="()D"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethodComplexityFactor" desc="(Ljava/lang/String;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfClasses" desc="()Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfMethods" desc="()Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMethodComplexityFactor" desc="(I)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMethodName" desc="(I)Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOptions" desc="()Lmain/java/main/Options;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createScanner" desc="(Lmain/java/main/Options;)Lmain/java/scanner/Scanner;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readTokens" desc="(Lmain/java/scanner/Scanner;)Lmain/java/main/TokenList;"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printMethods" desc="(Lmain/java/metrics/Mccabe;)V"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="204" covered="1231"/><counter type="BRANCH" missed="27" covered="143"/><counter type="COMPLEXITY" missed="28" covered="83"/><counter type="METHOD" missed="8" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="main/java/metrics/SlocNode"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Integer;)V"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="main/java/metrics/Slocs"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="18" covered="7"/><counter type="BRANCH" missed="6" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearList" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compute" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="5" covered="88"/><counter type="BRANCH" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfSlocs" desc="(Ljava/lang/String;)I"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="debugging_print" desc="()V"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="()V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokensFromFile" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processTokens" desc="(Ljava/lang/String;Z)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$main$1" desc="(Ljava/nio/file/Path;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$main$0" desc="(Ljava/nio/file/Path;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="1" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="148" covered="198"/><counter type="BRANCH" missed="16" covered="22"/><counter type="COMPLEXITY" missed="15" covered="16"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="main/java/metrics/MccabeNode"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)V"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFilename" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethodName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLineNumber" desc="()Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMccabeComplexityFactor" desc="()Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="main/java/metrics/Tests"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="9" covered="9"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compute" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="5" covered="47"/><counter type="BRANCH" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfTests" desc="()I"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="debugging_print" desc="()V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="()V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokensFromFile" desc="(Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processTokens" desc="(Ljava/lang/String;Ljava/util/List;Z)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$main$1" desc="(Ljava/nio/file/Path;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$main$0" desc="(Ljava/nio/file/Path;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="153" covered="83"/><counter type="BRANCH" missed="13" covered="9"/><counter type="COMPLEXITY" missed="13" covered="9"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="708" covered="1773"/><counter type="BRANCH" missed="74" covered="196"/><counter type="COMPLEXITY" missed="74" covered="137"/><counter type="METHOD" missed="25" covered="51"/><counter type="CLASS" missed="0" covered="7"/></package><counter type="INSTRUCTION" missed="1262" covered="5644"/><counter type="BRANCH" missed="186" covered="506"/><counter type="COMPLEXITY" missed="175" covered="349"/><counter type="METHOD" missed="37" covered="122"/><counter type="CLASS" missed="0" covered="18"/></report>