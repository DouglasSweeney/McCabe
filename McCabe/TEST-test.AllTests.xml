<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="0" failures="0" hostname="dks-ThinkCentre-M73" name="test.AllTests" skipped="0" tests="93" time="1.035" timestamp="2020-04-28T15:38:36">
  <properties>
    <property name="java.vendor" value="Oracle Corporation" />
    <property name="result.exec.file" value="/home/dks/git/McCabe_v1/McCabe/build/coverage/jacoco.exec" />
    <property name="sun.java.launcher" value="SUN_STANDARD" />
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers" />
    <property name="os.name" value="Linux" />
    <property name="sun.desktop" value="gnome" />
    <property name="lib.getopt.dir" value="/home/dks/git/McCabe_v1/McCabe/lib/getopt" />
    <property name="java.vm.specification.vendor" value="Oracle Corporation" />
    <property name="ant.home" value="/usr/share/ant" />
    <property name="java.runtime.version" value="11.0.5+10-LTS" />
    <property name="user.name" value="dks" />
    <property name="lib.hamcrest.dir" value="/home/dks/git/McCabe_v1/McCabe/lib/hamcrest" />
    <property name="user.language" value="en" />
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-11-oracle/lib" />
    <property name="ant.project.default-target" value="rebuild" />
    <property name="ant.project.name" value="Example Ant Build with JaCoCo" />
    <property name="java.vm.compressedOopsMode" value="32-bit" />
    <property name="java.version" value="11.0.5" />
    <property name="user.timezone" value="" />
    <property name="sun.arch.data.model" value="64" />
    <property name="sun.cpu.isalist" value="" />
    <property name="sun.jnu.encoding" value="UTF-8" />
    <property name="file.separator" value="/" />
    <property name="java.specification.name" value="Java Platform API Specification" />
    <property name="java.class.version" value="55.0" />
    <property name="user.country" value="US" />
    <property name="ant.file.type.Example Ant Build with JaCoCo" value="file" />
    <property name="java.home" value="/usr/lib/jvm/java-11-oracle" />
    <property name="java.vm.info" value="mixed mode" />
    <property name="ant.file" value="/home/dks/git/McCabe_v1/McCabe/build/ant/build.xml" />
    <property name="os.version" value="4.15.0-96-generic" />
    <property name="result.report.dir" value="/home/dks/git/McCabe_v1/McCabe/build/coverage/site/jacoco" />
    <property name="path.separator" value=":" />
    <property name="lib.junit.dir" value="/home/dks/git/McCabe_v1/McCabe/lib/junit" />
    <property name="java.vm.version" value="11.0.5+10-LTS" />
    <property name="ant.library.dir" value="/usr/share/ant/lib" />
    <property name="result.classes.dir" value="/home/dks/git/McCabe_v1/McCabe/build/coverage/classes" />
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob" />
    <property name="sun.io.unicode.encoding" value="UnicodeLittle" />
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit" />
    <property name="_jacoco.agentFile" value="/tmp/jacocoagent15288497663710349832.jar" />
    <property name="user.home" value="/home/dks" />
    <property name="java.version.date" value="2019-10-15" />
    <property name="java.specification.vendor" value="Oracle Corporation" />
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib" />
    <property name="java.vendor.url" value="http://java.oracle.com/" />
    <property name="java.vm.vendor" value="Oracle Corporation" />
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment" />
    <property name="sun.java.command" value="org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner test.AllTests skipNonTests=false filtertrace=true haltOnError=false haltOnFailure=false formatter=org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter showoutput=false outputtoformatters=true logfailedtests=true threadid=0 logtestlistenerevents=false formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,/home/dks/git/McCabe_v1/McCabe/TEST-test.AllTests.xml formatter=org.apache.tools.ant.taskdefs.optional.junit.PlainJUnitResultFormatter,/home/dks/git/McCabe_v1/McCabe/TEST-test.AllTests.txt formatter=org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter,/home/dks/git/McCabe_v1/McCabe/TEST-test.AllTests.txt crashfile=/home/dks/git/McCabe_v1/McCabe/junitvmwatcher11653072016474232779.properties propsfile=/home/dks/git/McCabe_v1/McCabe/junit14087647430883861626.properties" />
    <property name="java.class.path" value="/home/dks/git/McCabe_v1/McCabe/lib/getopt/java-getopt-1.0.14.jar:/home/dks/git/McCabe_v1/McCabe/lib/hamcrest/hamcrest-2.2.jar:/home/dks/git/McCabe_v1/McCabe/lib/junit/junit-4.13.jar:/home/dks/git/McCabe_v1/McCabe/build/coverage/classes:/usr/share/ant/lib/junit.jar:/usr/share/java/ant-launcher-1.9.6.jar:/usr/share/ant/lib/ant.jar:/usr/share/ant/lib/ant-junit.jar:/usr/share/ant/lib/ant-junit4.jar" />
    <property name="ant.version" value="Apache Ant(TM) version 1.9.6 compiled on July 20 2018" />
    <property name="jdk.debug" value="release" />
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification" />
    <property name="ant.file.type" value="file" />
    <property name="java.vm.specification.version" value="11" />
    <property name="sun.cpu.endian" value="little" />
    <property name="sun.os.patch.level" value="unknown" />
    <property name="java.io.tmpdir" value="/tmp" />
    <property name="java.vendor.url.bug" value="http://bugreport.java.com/bugreport/" />
    <property name="os.arch" value="amd64" />
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment" />
    <property name="user.dir" value="/home/dks/git/McCabe_v1/McCabe/build/ant" />
    <property name="ant.file.Example Ant Build with JaCoCo" value="/home/dks/git/McCabe_v1/McCabe/build/ant/build.xml" />
    <property name="line.separator" value="&#xa;" />
    <property name="result.dir" value="/home/dks/git/McCabe_v1/McCabe/build/coverage" />
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM" />
    <property name="basedir" value="/home/dks/git/McCabe_v1/McCabe" />
    <property name="ant.java.version" value="1.9" />
    <property name="ant.core.lib" value="/usr/share/ant/lib/ant.jar" />
    <property name="file.encoding" value="UTF-8" />
    <property name="java.specification.version" value="11" />
    <property name="src.dir" value="/home/dks/git/McCabe_v1/McCabe/src" />
    <property name="java.vendor.version" value="18.9" />
    <property name="ant.project.invoked-targets" value="rebuild" />
  </properties>
  <testcase classname="test.main.OptionsTest" name="checkOptionE" time="0.028" />
  <testcase classname="test.main.OptionsTest" name="checkOptionM" time="0.0" />
  <testcase classname="test.main.OptionsTest" name="checkOptionMFilename" time="0.001" />
  <testcase classname="test.main.OptionsTest" name="checkMcCabeDirectoryCommandLine" time="0.0" />
  <testcase classname="test.main.OptionsTest" name="checkOptionExceptions" time="0.0" />
  <testcase classname="test.main.OptionsTest" name="checkEmptyStringOption" time="0.0" />
  <testcase classname="test.main.OptionsTest" name="checkSetAndMcCabeDirectory" time="0.0" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeOther2Method" time="0.101" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeStringLiteralMethod" time="0.026" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeForStatementMethod" time="0.025" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeWhileStatementMethod" time="0.024" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeAnalyzeMethod" time="0.026" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeFloatLiteralMethod" time="0.022" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeBase2IntegerMethod" time="0.021" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeCharLiteralMethod" time="0.021" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeOther3Method" time="0.021" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeCommentsMethod" time="0.02" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeTildeMethod" time="0.02" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeBooleanStatementMethod" time="0.02" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeTestInputMethod" time="0.021" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeMain2Method" time="0.021" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeIfStatementMethod" time="0.022" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeFocusGainedMethod" time="0.022" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeOther4Method" time="0.022" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeDoubleLiteralMethod" time="0.028" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeCommaMethod" time="0.021" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeBase10IntegerMethod" time="0.02" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeBase8IntegerMethod" time="0.019" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeMain3Method" time="0.018" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeCharMethodMethod" time="0.019" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeLongsMethod" time="0.019" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeOtherMethod" time="0.019" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeMainMethod" time="0.02" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeHelloWorldMethod" time="0.019" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeAbstractClassMethod" time="0.02" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeSubProcedureMethod" time="0.019" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeBase16IntegerMethod" time="0.018" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeOperatorsMethod" time="0.018" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeFocusLostMethod" time="0.018" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeArraysMethod" time="0.017" />
  <testcase classname="test.metrics.McCabeTest" name="checkMcCabeShiftsMethod" time="0.017" />
  <testcase classname="test.scanner.ScannerTest" name="modequals" time="0.001" />
  <testcase classname="test.scanner.ScannerTest" name="identifier" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="divideequals" time="0.001" />
  <testcase classname="test.scanner.ScannerTest" name="longLiteral" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="stringliteral" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="rBracket" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="lessequals" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="increment" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="divide" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="unsignedshiftright" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="equals" time="0.001" />
  <testcase classname="test.scanner.ScannerTest" name="testInput" time="0.016" />
  <testcase classname="test.scanner.ScannerTest" name="lBrace" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="lParen" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="period" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="rBrace" time="0.001" />
  <testcase classname="test.scanner.ScannerTest" name="base8integer" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="rParen" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="caretequals" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="semiColon" time="0.001" />
  <testcase classname="test.scanner.ScannerTest" name="asterisk" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="questionmark" time="0.001" />
  <testcase classname="test.scanner.ScannerTest" name="gt" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="or" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="eof" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="mod" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="not" time="0.001" />
  <testcase classname="test.scanner.ScannerTest" name="less" time="0.001" />
  <testcase classname="test.scanner.ScannerTest" name="oror" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="plus" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="shiftrightequals" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="caret" time="0.001" />
  <testcase classname="test.scanner.ScannerTest" name="colon" time="0.001" />
  <testcase classname="test.scanner.ScannerTest" name="comma" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="minus" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="tilde" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="equalequal" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="shiftleftequals" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="decrement" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="shiftleft" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="base16integer" time="0.001" />
  <testcase classname="test.scanner.ScannerTest" name="lBracket" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="ampersand" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="ampersandampersand" time="0.001" />
  <testcase classname="test.scanner.ScannerTest" name="orequals" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="unsignedshiftrightequals" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="base2integer" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="plusequals" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="notequals" time="0.001" />
  <testcase classname="test.scanner.ScannerTest" name="shiftright" time="0.0" />
  <testcase classname="test.scanner.ScannerTest" name="gtequals" time="0.001" />
  <testcase classname="test.scanner.ScannerTest" name="multiplyequals" time="0.0" />
  <system-out><![CDATA[method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
method: <main>  Complexity Factor: 10
null: PACKAGE
test: IDENTIFIER
null: SEMICOLON
null: IMPORT
java: IDENTIFIER
null: PERIOD
awt: IDENTIFIER
null: PERIOD
event: IDENTIFIER
null: PERIOD
FocusEvent: IDENTIFIER
null: SEMICOLON
null: IMPORT
java: IDENTIFIER
null: PERIOD
awt: IDENTIFIER
null: PERIOD
event: IDENTIFIER
null: PERIOD
FocusListener: IDENTIFIER
null: SEMICOLON
null: IMPORT
java: IDENTIFIER
null: PERIOD
io: IDENTIFIER
null: PERIOD
FileNotFoundException: IDENTIFIER
null: SEMICOLON
null: IMPORT
java: IDENTIFIER
null: PERIOD
io: IDENTIFIER
null: PERIOD
IOException: IDENTIFIER
null: SEMICOLON
null: IMPORT
java: IDENTIFIER
null: PERIOD
util: IDENTIFIER
null: PERIOD
null: ASTERISK
null: SEMICOLON
null: IMPORT
main: IDENTIFIER
null: PERIOD
java: IDENTIFIER
null: PERIOD
scanner: IDENTIFIER
null: PERIOD
Scanner: IDENTIFIER
null: SEMICOLON
null: PUBLIC
null: CLASS
TestInput: IDENTIFIER
null: EXTENDS
Scanner: IDENTIFIER
null: IMPLEMENTS
FocusListener: IDENTIFIER
null: LBRACE
null: PRIVATE
null: TRANSIENT
Integer: IDENTIFIER
bbbbbb: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
null: VOLATILE
Long: IDENTIFIER
ccccccc: IDENTIFIER
null: EQUALS
null: NEW
Long: IDENTIFIER
null: LPAREN
0: BASE8_INTEGER
null: RPAREN
null: SEMICOLON
null: STATIC
null: INT
aaaaaaaaa: IDENTIFIER
null: SEMICOLON
null: PRIVATE
null: FINAL
null: INT
ZERO: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
null: PUBLIC
TestInput: IDENTIFIER
null: LPAREN
null: RPAREN
null: THROWS
IOException: IDENTIFIER
null: LBRACE
null: SUPER
null: LPAREN
"": STRING_LITERAL
null: RPAREN
null: SEMICOLON
null: BOOLEAN
found: IDENTIFIER
null: EQUALS
null: FALSE
null: SEMICOLON
null: DO
null: LBRACE
found: IDENTIFIER
null: EQUALS
null: TRUE
null: SEMICOLON
null: RBRACE
null: WHILE
null: LPAREN
null: NOT
found: IDENTIFIER
null: RPAREN
null: SEMICOLON
null: RBRACE
null: SYNCHRONIZED
null: PRIVATE
null: VOID
forStatement: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: INT
i: IDENTIFIER
null: SEMICOLON
null: INT
num: IDENTIFIER
null: EQUALS
15: INT
null: SEMICOLON
null: FOR
null: LPAREN
i: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
i: IDENTIFIER
null: EQUAL_EQUAL
0: BASE8_INTEGER
null: SEMICOLON
i: IDENTIFIER
null: INCREMENT
null: RPAREN
num: IDENTIFIER
null: DECREMENT
null: SEMICOLON
null: FOR
null: LPAREN
i: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
i: IDENTIFIER
null: GT
10: INT
null: SEMICOLON
i: IDENTIFIER
null: INCREMENT
null: RPAREN
null: LBRACE
num: IDENTIFIER
null: DECREMENT
null: SEMICOLON
null: RBRACE
null: FOR
null: LPAREN
i: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
i: IDENTIFIER
null: LESS
10: INT
null: SEMICOLON
i: IDENTIFIER
null: INCREMENT
null: RPAREN
null: LBRACE
num: IDENTIFIER
null: DECREMENT
null: SEMICOLON
null: RBRACE
null: FOR
null: LPAREN
null: INT
j: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
j: IDENTIFIER
null: LESS
10: INT
null: SEMICOLON
j: IDENTIFIER
null: INCREMENT
null: RPAREN
null: LBRACE
num: IDENTIFIER
null: DECREMENT
null: SEMICOLON
null: CONTINUE
null: SEMICOLON
null: RBRACE
null: RBRACE
null: PROTECTED
null: BOOLEAN
booleanStatement: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: BOOLEAN
bool: IDENTIFIER
null: EQUALS
null: FALSE
null: SEMICOLON
bool: IDENTIFIER
null: EQUALS
null: TRUE
null: SEMICOLON
bool: IDENTIFIER
null: EQUALS
null: FALSE
null: SEMICOLON
null: RETURN
null: TRUE
null: SEMICOLON
null: RBRACE
null: PRIVATE
Long: IDENTIFIER
charMethod: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: CHAR
ch: IDENTIFIER
null: EQUALS
'A': CHAR
null: SEMICOLON
null: CHAR
ch2: IDENTIFIER
null: EQUALS
'\n': CHAR
null: SEMICOLON
null: RETURN
1l: LONG_LITERAL
null: SEMICOLON
null: RBRACE
null: PRIVATE
null: VOID
ifStatement: IDENTIFIER
null: LPAREN
null: BOOLEAN
bool: IDENTIFIER
null: RPAREN
null: LBRACE
null: INT
i: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
null: INT
ZERO: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
null: IF
null: LPAREN
i: IDENTIFIER
null: EQUAL_EQUAL
0: BASE8_INTEGER
null: RPAREN
i: IDENTIFIER
null: PLUS_EQUALS
1: INT
null: SEMICOLON
null: ELSE
null: LBRACE
i: IDENTIFIER
null: EQUALS
2: INT
null: SEMICOLON
null: RBRACE
null: IF
null: LPAREN
i: IDENTIFIER
null: EQUAL_EQUAL
ZERO: IDENTIFIER
null: RPAREN
i: IDENTIFIER
null: PLUS_EQUALS
1: INT
null: SEMICOLON
null: ELSE
null: LBRACE
i: IDENTIFIER
null: EQUALS
2: INT
null: SEMICOLON
null: RBRACE
null: IF
null: LPAREN
bool: IDENTIFIER
null: RPAREN
i: IDENTIFIER
null: PLUS_EQUALS
1: INT
null: SEMICOLON
null: ELSE
null: LBRACE
i: IDENTIFIER
null: EQUALS
2: INT
null: SEMICOLON
null: RBRACE
null: IF
null: LPAREN
bool: IDENTIFIER
null: AMPERSAND_AMPERSAND
null: TRUE
null: RPAREN
i: IDENTIFIER
null: PLUS_EQUALS
1: INT
null: SEMICOLON
null: ELSE
null: LBRACE
i: IDENTIFIER
null: EQUALS
2: INT
null: SEMICOLON
null: RBRACE
null: RETURN
null: SEMICOLON
null: RBRACE
null: PRIVATE
null: VOID
whileStatement: IDENTIFIER
null: LPAREN
null: RPAREN
null: THROWS
IOException: IDENTIFIER
null: LBRACE
TestInput: IDENTIFIER
p: IDENTIFIER
null: EQUALS
null: NULL
null: SEMICOLON
null: WHILE
null: LPAREN
null: NOT
null: LPAREN
p: IDENTIFIER
null: EQUAL_EQUAL
null: NULL
null: RPAREN
null: RPAREN
null: LBRACE
p: IDENTIFIER
null: EQUALS
null: NEW
TestInput: IDENTIFIER
null: LPAREN
null: RPAREN
null: SEMICOLON
null: BREAK
null: SEMICOLON
null: RBRACE
System: IDENTIFIER
null: PERIOD
out: IDENTIFIER
null: PERIOD
println: IDENTIFIER
null: LPAREN
null: THIS
null: RPAREN
null: SEMICOLON
System: IDENTIFIER
null: PERIOD
out: IDENTIFIER
null: PERIOD
println: IDENTIFIER
null: LPAREN
p: IDENTIFIER
null: RPAREN
null: SEMICOLON
null: RBRACE
null: PUBLIC
null: VOID
operators: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: INT
i: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
i: IDENTIFIER
null: EQUALS
i: IDENTIFIER
null: ASTERISK
1: INT
null: SEMICOLON
i: IDENTIFIER
null: EQUALS
i: IDENTIFIER
null: PLUS
1: INT
null: SEMICOLON
i: IDENTIFIER
null: DECREMENT
null: SEMICOLON
null: DECREMENT
i: IDENTIFIER
null: SEMICOLON
i: IDENTIFIER
null: EQUALS
i: IDENTIFIER
null: MINUS
1: INT
null: SEMICOLON
null: IF
null: LPAREN
i: IDENTIFIER
null: LESS_EQUALS
0: BASE8_INTEGER
null: RPAREN
null: LBRACE
i: IDENTIFIER
null: EQUALS
1: INT
null: SEMICOLON
null: RBRACE
null: ELSE
null: IF
null: LPAREN
i: IDENTIFIER
null: GT
2: INT
null: RPAREN
null: LBRACE
i: IDENTIFIER
null: EQUALS
2: INT
null: SEMICOLON
null: RBRACE
null: ELSE
null: IF
null: LPAREN
null: NOT
null: FALSE
null: RPAREN
null: LBRACE
i: IDENTIFIER
null: EQUALS
3: INT
null: SEMICOLON
null: RBRACE
null: ASSERT
null: LPAREN
i: IDENTIFIER
null: GT
0: BASE8_INTEGER
null: RPAREN
null: SEMICOLON
null: RBRACE
null: PRIVATE
null: VOID
charLiteral: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: CHAR
ch: IDENTIFIER
null: SEMICOLON
ch: IDENTIFIER
null: EQUALS
'a': CHAR
null: SEMICOLON
ch: IDENTIFIER
null: EQUALS
'%': CHAR
null: SEMICOLON
ch: IDENTIFIER
null: EQUALS
'\t': CHAR
null: SEMICOLON
ch: IDENTIFIER
null: EQUALS
'\\': CHAR
null: SEMICOLON
ch: IDENTIFIER
null: EQUALS
'\'': CHAR
null: SEMICOLON
null: RBRACE
null: PRIVATE
null: VOID
stringLiteral: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
Integer: IDENTIFIER
i: IDENTIFIER
null: EQUALS
null: NEW
Integer: IDENTIFIER
null: LPAREN
5: INT
null: RPAREN
null: SEMICOLON
System: IDENTIFIER
null: PERIOD
out: IDENTIFIER
null: PERIOD
println: IDENTIFIER
null: LPAREN
"Hello World.": STRING_LITERAL
null: RPAREN
null: SEMICOLON
i: IDENTIFIER
null: EQUALS
0x00: BASE16_INTEGER
null: SEMICOLON
System: IDENTIFIER
null: PERIOD
out: IDENTIFIER
null: PERIOD
println: IDENTIFIER
null: LPAREN
i: IDENTIFIER
null: RPAREN
null: SEMICOLON
null: RBRACE
null: PRIVATE
null: VOID
base2_Integer: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: INT
Integer: IDENTIFIER
null: SEMICOLON
Integer: IDENTIFIER
null: EQUALS
0b0000_0011: BASE2_INTEGER
null: SEMICOLON
Integer: IDENTIFIER
null: EQUALS
0B00_00_11_11: BASE2_INTEGER
null: SEMICOLON
null: RBRACE
null: PRIVATE
null: VOID
base8_Integer: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: INT
Integer: IDENTIFIER
null: SEMICOLON
Integer: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
Integer: IDENTIFIER
null: EQUALS
00_00_00_11: BASE8_INTEGER
null: SEMICOLON
Integer: IDENTIFIER
null: EQUALS
01777: BASE8_INTEGER
null: SEMICOLON
null: RBRACE
null: PRIVATE
null: VOID
base10_Integer: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: INT
Integer: IDENTIFIER
null: SEMICOLON
Integer: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
Integer: IDENTIFIER
null: EQUALS
2: INT
null: SEMICOLON
Integer: IDENTIFIER
null: EQUALS
1_996: INT
null: SEMICOLON
Integer: IDENTIFIER
null: EQUALS
-1_996: INT
null: SEMICOLON
Integer: IDENTIFIER
null: EQUALS
+1_996: INT
null: SEMICOLON
null: RBRACE
null: PRIVATE
null: VOID
base16_Integer: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: INT
Integer: IDENTIFIER
null: SEMICOLON
Integer: IDENTIFIER
null: EQUALS
0x0000_0011: BASE16_INTEGER
null: SEMICOLON
Integer: IDENTIFIER
null: EQUALS
0X00_00_11_11: BASE16_INTEGER
null: SEMICOLON
null: RBRACE
null: PRIVATE
null: VOID
longs: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: LONG
Long: IDENTIFIER
null: SEMICOLON
Long: IDENTIFIER
null: EQUALS
0l: BASE8_INTEGER
null: SEMICOLON
Long: IDENTIFIER
null: EQUALS
0777L: BASE8_INTEGER
null: SEMICOLON
Long: IDENTIFIER
null: EQUALS
0x00000000L: BASE16_INTEGER
null: SEMICOLON
Long: IDENTIFIER
null: EQUALS
2_147_483_647L: LONG_LITERAL
null: SEMICOLON
Long: IDENTIFIER
null: EQUALS
0xC0B0L: BASE16_INTEGER
null: SEMICOLON
null: RBRACE
null: PRIVATE
null: VOID
floatLiteral: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: FLOAT
Float: IDENTIFIER
null: SEMICOLON
Float: IDENTIFIER
null: EQUALS
1e1f: FLOAT
null: SEMICOLON
Float: IDENTIFIER
null: EQUALS
2.f: FLOAT
null: SEMICOLON
Float: IDENTIFIER
null: EQUALS
null: PERIOD
3: INT
f: IDENTIFIER
null: SEMICOLON
Float: IDENTIFIER
null: EQUALS
0f: FLOAT
null: SEMICOLON
Float: IDENTIFIER
null: EQUALS
3.14f: FLOAT
null: SEMICOLON
Float: IDENTIFIER
null: EQUALS
6.022137e+23F: FLOAT
null: SEMICOLON
null: RBRACE
null: PRIVATE
null: VOID
doubleLiteral: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: DOUBLE
d: IDENTIFIER
null: SEMICOLON
d: IDENTIFIER
null: EQUALS
1e1: DOUBLE
null: SEMICOLON
d: IDENTIFIER
null: EQUALS
2.: DOUBLE
null: SEMICOLON
d: IDENTIFIER
null: EQUALS
null: PERIOD
3: INT
null: SEMICOLON
d: IDENTIFIER
null: EQUALS
0.0: DOUBLE
null: SEMICOLON
d: IDENTIFIER
null: EQUALS
3.14: DOUBLE
null: SEMICOLON
d: IDENTIFIER
null: EQUALS
1e-9d: DOUBLE
null: SEMICOLON
d: IDENTIFIER
null: EQUALS
1e+9D: DOUBLE
null: SEMICOLON
d: IDENTIFIER
null: EQUALS
1e137: DOUBLE
null: SEMICOLON
null: RBRACE
null: PRIVATE
null: VOID
comma: IDENTIFIER
null: LPAREN
null: INT
i: IDENTIFIER
null: COMMA
null: INT
j: IDENTIFIER
null: RPAREN
null: LBRACE
null: RETURN
null: SEMICOLON
null: RBRACE
null: PRIVATE
List: IDENTIFIER
null: LESS
Integer: IDENTIFIER
null: GT
arrays: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
List: IDENTIFIER
null: LESS
Integer: IDENTIFIER
null: GT
array: IDENTIFIER
null: EQUALS
null: NEW
ArrayList: IDENTIFIER
null: LPAREN
null: RPAREN
null: SEMICOLON
array: IDENTIFIER
null: PERIOD
add: IDENTIFIER
null: LPAREN
0: BASE8_INTEGER
null: RPAREN
null: SEMICOLON
null: RETURN
array: IDENTIFIER
null: SEMICOLON
null: RBRACE
null: PUBLIC
String: IDENTIFIER
analyze: IDENTIFIER
null: LPAREN
String: IDENTIFIER
context: IDENTIFIER
null: RPAREN
null: LBRACE
null: RETURN
null: NULL
null: SEMICOLON
null: RBRACE
null: PUBLIC
null: VOID
comments: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: RBRACE
null: PUBLIC
null: VOID
tilde: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: INT
Integer: IDENTIFIER
null: SEMICOLON
Integer: IDENTIFIER
null: EQUALS
null: TILDE
0x8000: BASE16_INTEGER
null: SEMICOLON
null: RBRACE
null: PUBLIC
null: VOID
shifts: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: INT
a: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
a: IDENTIFIER
null: SHIFT_LEFT_EQUALS
0: BASE8_INTEGER
null: SEMICOLON
a: IDENTIFIER
null: SHIFT_RIGHT_EQUALS
1: INT
null: SEMICOLON
a: IDENTIFIER
null: EQUALS
0x0001: BASE16_INTEGER
null: SHIFT_RIGHT
1: INT
null: SEMICOLON
a: IDENTIFIER
null: EQUALS
0x1000: BASE16_INTEGER
null: UNSIGNED_SHIFT_RIGHT
6: INT
null: SEMICOLON
a: IDENTIFIER
null: UNSIGNED_SHIFT_RIGHT_EQUALS
1: INT
null: SEMICOLON
a: IDENTIFIER
null: EQUALS
0x0001: BASE16_INTEGER
null: SHIFT_LEFT
1: INT
null: SEMICOLON
null: RBRACE
null: PUBLIC
null: VOID
other: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: SHORT
a: IDENTIFIER
null: EQUALS
5: INT
null: SEMICOLON
null: BOOLEAN
bool: IDENTIFIER
null: EQUALS
null: TRUE
null: SEMICOLON
null: BYTE
Byte: IDENTIFIER
null: SEMICOLON
null: DOUBLE
Double: IDENTIFIER
null: SEMICOLON
null: LONG
Long: IDENTIFIER
null: SEMICOLON
null: SHORT
Short: IDENTIFIER
null: SEMICOLON
String: IDENTIFIER
s: IDENTIFIER
null: EQUALS
null: NULL
null: SEMICOLON
null: IF
null: LPAREN
s: IDENTIFIER
null: INSTANCEOF
String: IDENTIFIER
null: RPAREN
null: THROW
null: NEW
SecurityException: IDENTIFIER
null: LPAREN
"": STRING_LITERAL
null: RPAREN
null: SEMICOLON
null: RBRACE
null: PUBLIC
null: VOID
other2: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: SHORT
a: IDENTIFIER
null: EQUALS
5: INT
null: SEMICOLON
null: BOOLEAN
bool: IDENTIFIER
null: SEMICOLON
null: BYTE
Byte: IDENTIFIER
null: SEMICOLON
null: DOUBLE
Double: IDENTIFIER
null: SEMICOLON
null: LONG
Long: IDENTIFIER
null: SEMICOLON
null: SHORT
Short: IDENTIFIER
null: SEMICOLON
bool: IDENTIFIER
null: EQUALS
a: IDENTIFIER
null: LESS
10: INT
null: QUESTION_MARK
null: TRUE
null: COLON
null: FALSE
null: SEMICOLON
bool: IDENTIFIER
null: OR_EQUALS
null: TRUE
null: SEMICOLON
null: IF
null: LPAREN
bool: IDENTIFIER
null: NOT_EQUALS
null: TRUE
null: RPAREN
null: LBRACE
a: IDENTIFIER
null: EQUALS
6: INT
null: SEMICOLON
null: RBRACE
null: IF
null: LPAREN
null: NOT
bool: IDENTIFIER
null: RPAREN
null: LBRACE
bool: IDENTIFIER
null: EQUALS
null: TRUE
null: SEMICOLON
null: RBRACE
null: IF
null: LPAREN
null: TRUE
null: OROR
null: FALSE
null: RPAREN
null: LBRACE
a: IDENTIFIER
null: OR_EQUALS
0x02: BASE16_INTEGER
null: SEMICOLON
null: RBRACE
null: RBRACE
null: PUBLIC
null: VOID
other3: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: SHORT
a: IDENTIFIER
null: EQUALS
5: INT
null: SEMICOLON
null: BOOLEAN
bool: IDENTIFIER
null: EQUALS
null: TRUE
null: SEMICOLON
null: BYTE
Byte: IDENTIFIER
null: SEMICOLON
null: DOUBLE
Double: IDENTIFIER
null: SEMICOLON
null: LONG
Long: IDENTIFIER
null: SEMICOLON
null: SHORT
Short: IDENTIFIER
null: SEMICOLON
a: IDENTIFIER
null: CARET_EQUALS
2: INT
null: SEMICOLON
a: IDENTIFIER
null: MOD_EQUALS
2: INT
null: SEMICOLON
a: IDENTIFIER
null: MULTIPLY_EQUALS
2: INT
null: SEMICOLON
a: IDENTIFIER
null: DIVIDE_EQUALS
2: INT
null: SEMICOLON
null: IF
null: LPAREN
a: IDENTIFIER
null: GT_EQUALS
2: INT
null: RPAREN
null: LBRACE
bool: IDENTIFIER
null: EQUALS
null: TRUE
null: SEMICOLON
null: RBRACE
null: SEMICOLON
null: TRY
null: LBRACE
a: IDENTIFIER
null: EQUALS
1: INT
null: CARET
2: INT
null: SEMICOLON
a: IDENTIFIER
null: EQUALS
1: INT
null: PLUS
1: INT
null: SEMICOLON
a: IDENTIFIER
null: EQUALS
2: INT
null: MINUS
1: INT
null: SEMICOLON
a: IDENTIFIER
null: EQUALS
1: INT
null: AMPERSAND
1: INT
null: SEMICOLON
null: RBRACE
null: CATCH
null: LPAREN
Exception: IDENTIFIER
e: IDENTIFIER
null: RPAREN
null: LBRACE
a: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
null: RBRACE
null: FINALLY
null: LBRACE
a: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
null: RBRACE
null: IF
null: LPAREN
a: IDENTIFIER
null: MOD
1: INT
null: EQUAL_EQUAL
0: BASE8_INTEGER
null: RPAREN
null: LBRACE
bool: IDENTIFIER
null: EQUALS
null: TRUE
null: SEMICOLON
null: RBRACE
null: IF
null: LPAREN
a: IDENTIFIER
null: DIVIDE
2: INT
null: EQUAL_EQUAL
0: BASE8_INTEGER
null: RPAREN
null: LBRACE
bool: IDENTIFIER
null: EQUALS
null: TRUE
null: SEMICOLON
null: RBRACE
null: RBRACE
null: PUBLIC
null: VOID
other4: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: SHORT
a: IDENTIFIER
null: EQUALS
5: INT
null: SEMICOLON
null: BOOLEAN
bool: IDENTIFIER
null: EQUALS
null: TRUE
null: SEMICOLON
null: BYTE
Byte: IDENTIFIER
null: SEMICOLON
null: DOUBLE
Double: IDENTIFIER
null: SEMICOLON
null: LONG
Long: IDENTIFIER
null: SEMICOLON
null: SHORT
Short: IDENTIFIER
null: SEMICOLON
null: SWITCH
null: LPAREN
a: IDENTIFIER
null: RPAREN
null: LBRACE
null: CASE
0: BASE8_INTEGER
null: COLON
null: BREAK
null: SEMICOLON
null: DEFAULT
null: COLON
null: BREAK
null: SEMICOLON
null: RBRACE
null: DO
null: LBRACE
null: SEMICOLON
null: RBRACE
null: WHILE
null: LPAREN
bool: IDENTIFIER
null: RPAREN
null: SEMICOLON
null: RBRACE
null: PUBLIC
null: NATIVE
null: VOID
helloWorld: IDENTIFIER
null: LPAREN
null: RPAREN
null: SEMICOLON
null: OVERRIDE_ANNOTATION
null: PUBLIC
null: VOID
focusGained: IDENTIFIER
null: LPAREN
FocusEvent: IDENTIFIER
arg0: IDENTIFIER
null: RPAREN
null: LBRACE
null: RBRACE
null: OVERRIDE_ANNOTATION
null: PUBLIC
null: VOID
focusLost: IDENTIFIER
null: LPAREN
FocusEvent: IDENTIFIER
arg0: IDENTIFIER
null: RPAREN
null: LBRACE
null: RBRACE
null: ABSTRACT
null: CLASS
AbstractClass: IDENTIFIER
null: LBRACE
null: SUPPRESSWARNINGS_ANNOTATION
null: LPAREN
"unused": STRING_LITERAL
null: RPAREN
null: INT
i: IDENTIFIER
null: SEMICOLON
null: PUBLIC
AbstractClass: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
null: RBRACE
null: RBRACE
null: INTERFACE
Interface: IDENTIFIER
null: LBRACE
null: RBRACE
null: DEPRECATED_ANNOTATION
null: STRICTFP
null: CLASS
StrictfpClass: IDENTIFIER
null: LBRACE
null: RBRACE
null: ENUM
Enum: IDENTIFIER
null: LBRACE
null: RBRACE
null: PUBLIC
null: LONG
subProcedure: IDENTIFIER
null: LPAREN
null: RPAREN
null: THROWS
FileNotFoundException: IDENTIFIER
null: LBRACE
Integer: IDENTIFIER
i: IDENTIFIER
null: SEMICOLON
null: TRY
null: LBRACE
String: IDENTIFIER
filename: IDENTIFIER
null: EQUALS
"filename.txt": STRING_LITERAL
null: SEMICOLON
null: RBRACE
null: CATCH
null: LPAREN
Exception: IDENTIFIER
e: IDENTIFIER
null: RPAREN
null: LBRACE
null: THROW
null: NEW
FileNotFoundException: IDENTIFIER
null: LPAREN
null: RPAREN
null: SEMICOLON
null: RBRACE
null: FINALLY
null: LBRACE
i: IDENTIFIER
null: EQUALS
2: INT
null: SEMICOLON
null: RBRACE
null: RETURN
1l: LONG_LITERAL
null: SEMICOLON
null: RBRACE
null: PUBLIC
null: STATIC
null: VOID
main3: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
Integer: IDENTIFIER
j: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
null: BOOLEAN
found: IDENTIFIER
null: SEMICOLON
null: DO
null: LBRACE
found: IDENTIFIER
null: EQUALS
null: TRUE
null: SEMICOLON
null: DO
null: LBRACE
j: IDENTIFIER
null: INCREMENT
null: SEMICOLON
null: RBRACE
null: WHILE
null: LPAREN
j: IDENTIFIER
null: GT
0: BASE8_INTEGER
null: RPAREN
null: SEMICOLON
null: WHILE
null: LPAREN
found: IDENTIFIER
null: AMPERSAND_AMPERSAND
j: IDENTIFIER
null: GT_EQUALS
0: BASE8_INTEGER
null: RPAREN
null: LBRACE
j: IDENTIFIER
null: INCREMENT
null: SEMICOLON
null: RBRACE
null: RBRACE
null: WHILE
null: LPAREN
null: NOT
found: IDENTIFIER
null: RPAREN
null: SEMICOLON
null: RBRACE
null: PUBLIC
null: STATIC
null: VOID
main2: IDENTIFIER
null: LPAREN
null: RPAREN
null: LBRACE
Integer: IDENTIFIER
j: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
null: BOOLEAN
found: IDENTIFIER
null: SEMICOLON
null: DO
null: LBRACE
found: IDENTIFIER
null: EQUALS
null: TRUE
null: SEMICOLON
null: WHILE
null: LPAREN
found: IDENTIFIER
null: AMPERSAND_AMPERSAND
j: IDENTIFIER
null: GT_EQUALS
0: BASE8_INTEGER
null: RPAREN
null: LBRACE
j: IDENTIFIER
null: INCREMENT
null: SEMICOLON
null: RBRACE
null: RBRACE
null: WHILE
null: LPAREN
null: NOT
found: IDENTIFIER
null: RPAREN
null: SEMICOLON
null: RBRACE
null: PUBLIC
null: STATIC
null: VOID
main: IDENTIFIER
null: LPAREN
String: IDENTIFIER
null: LBRACKET
null: RBRACKET
args: IDENTIFIER
null: RPAREN
null: LBRACE
Integer: IDENTIFIER
j: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
null: BOOLEAN
found: IDENTIFIER
null: SEMICOLON
null: IF
null: LPAREN
null: TRUE
null: RPAREN
null: RETURN
null: SEMICOLON
null: FOR
null: LPAREN
null: INT
i: IDENTIFIER
null: EQUALS
0: BASE8_INTEGER
null: SEMICOLON
i: IDENTIFIER
null: LESS
10: INT
null: SEMICOLON
i: IDENTIFIER
null: INCREMENT
null: RPAREN
null: CONTINUE
null: SEMICOLON
null: DO
null: LBRACE
found: IDENTIFIER
null: EQUALS
null: TRUE
null: SEMICOLON
null: RBRACE
null: WHILE
null: LPAREN
null: NOT
found: IDENTIFIER
null: RPAREN
null: SEMICOLON
null: WHILE
null: LPAREN
found: IDENTIFIER
null: AMPERSAND_AMPERSAND
j: IDENTIFIER
null: GT_EQUALS
0: BASE8_INTEGER
null: RPAREN
null: LBRACE
j: IDENTIFIER
null: INCREMENT
null: SEMICOLON
null: RBRACE
found: IDENTIFIER
null: EQUALS
null: LPAREN
null: TRUE
null: RPAREN
null: QUESTION_MARK
null: FALSE
null: COLON
null: TRUE
null: SEMICOLON
null: RETURN
null: SEMICOLON
null: RBRACE
null: RBRACE
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
